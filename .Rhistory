makeCacheMatrix <- function(x = matrix()) {
inverse <- NULL
set <- function(y) {
x <<- y
inverse <<- NULL
}
get <- function() x
set_inverse <- function(inv) inverse <<- inv
get_inverse <- function() inverse
list(set = set, get = get,
set_inverse = set_inverse,
get_inverse = get_inverse)
}
cacheSolve <- function(x, ...) {
inverse <- x$get_inverse()
if(!is.null(inverse)) {
message("getting cached data")
return(inverse)
}
data <- x$get()
inverse <- solve(data, ...)
x$set_inverse(inverse)
inverse
}
my_Matrix <- makeCacheMatrix(matrix(1:4, 2, 2))
my_Matrix$get()
cacheinverse(my_Matrix)
cacheSolve(my_Matrix)
